package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FoodTruckAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFoodTruckAllPropertiesEquals(FoodTruck expected, FoodTruck actual) {
        assertFoodTruckAutoGeneratedPropertiesEquals(expected, actual);
        assertFoodTruckAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFoodTruckAllUpdatablePropertiesEquals(FoodTruck expected, FoodTruck actual) {
        assertFoodTruckUpdatableFieldsEquals(expected, actual);
        assertFoodTruckUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFoodTruckAutoGeneratedPropertiesEquals(FoodTruck expected, FoodTruck actual) {
        assertThat(expected)
            .as("Verify FoodTruck auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFoodTruckUpdatableFieldsEquals(FoodTruck expected, FoodTruck actual) {
        assertThat(expected)
            .as("Verify FoodTruck relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getRating()).as("check rating").isEqualTo(actual.getRating()))
            .satisfies(e -> assertThat(e.getProfilePicture()).as("check profilePicture").isEqualTo(actual.getProfilePicture()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFoodTruckUpdatableRelationshipsEquals(FoodTruck expected, FoodTruck actual) {
        assertThat(expected)
            .as("Verify FoodTruck relationships")
            .satisfies(e -> assertThat(e.getOwner()).as("check owner").isEqualTo(actual.getOwner()))
            .satisfies(e -> assertThat(e.getCuisineType()).as("check cuisineType").isEqualTo(actual.getCuisineType()))
            .satisfies(e -> assertThat(e.getLocation()).as("check location").isEqualTo(actual.getLocation()));
    }
}
